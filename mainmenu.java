/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sistemkasiruas;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.NumberFormat;
import java.util.Locale;

/**
 * Main menu class for the minimarket cashier program.
 */
public class mainmenu extends javax.swing.JFrame {
    private javax.swing.JButton addItemButton;
    private javax.swing.JButton checkoutButton;
    private javax.swing.JComboBox<String> paymentMethodComboBox;
    private javax.swing.JTable orderTable;
    private javax.swing.JTextField totalField;
    private javax.swing.JTextField itemIdField;
    private javax.swing.JTextField itemQtyField;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JLabel paymentMethodLabel;
    private javax.swing.JScrollPane orderScrollPane;
    private javax.swing.JLabel itemIdErrorLabel;
    private javax.swing.JLabel itemQtyErrorLabel;
    private javax.swing.JLabel itemIdLabel;
    private javax.swing.JLabel itemQtyLabel;
    private javax.swing.JButton deleteItemButton;
private javax.swing.JButton updateItemButton;
 
    /**
     * Creates new form mainmenu
     */
    public mainmenu() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(243, 243, 224));
        checkoutButton.setEnabled(false); // Disable checkout button initially
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jPanel3 = new javax.swing.JPanel();
        parentPanel = new javax.swing.JPanel();
        cashierPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        stockPanel = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stockTable = new javax.swing.JTable();
        idField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        qtyField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        logPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cashierButton = new javax.swing.JButton();
        stockButton = new javax.swing.JButton();
        logButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        


        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(96, 139, 193));
        setForeground(java.awt.Color.white);

        parentPanel.setBackground(new java.awt.Color(255, 255, 255));
        parentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(96, 139, 193)));
        parentPanel.setForeground(new java.awt.Color(255, 255, 255));
        parentPanel.setLayout(new java.awt.CardLayout());

        cashierPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Futura Hv BT", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(19, 62, 135));
        jLabel4.setText("Cashier");

        // Initialize components for cashierPanel
        itemIdField = new javax.swing.JTextField();
        itemQtyField = new javax.swing.JTextField();
        addItemButton = new javax.swing.JButton();
        orderScrollPane = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        totalLabel = new javax.swing.JLabel();
        totalField = new javax.swing.JTextField();
        paymentMethodLabel = new javax.swing.JLabel();
        paymentMethodComboBox = new javax.swing.JComboBox<>();
        checkoutButton = new javax.swing.JButton();
        itemIdErrorLabel = new javax.swing.JLabel();
        itemQtyErrorLabel = new javax.swing.JLabel();
        itemIdLabel = new javax.swing.JLabel();
        itemQtyLabel = new javax.swing.JLabel();
        deleteItemButton = new javax.swing.JButton();
        updateItemButton = new javax.swing.JButton();

        itemIdField.setText("Item ID");
        itemQtyField.setText("Quantity");

        addItemButton.setText("Add Item");
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
    new Object [][] {},
    new String [] {"Item ID", "Item Name", "Price", "Quantity", "Total"}
    ));
    orderTable.getTableHeader().setReorderingAllowed(false); // Disable column reordering
    orderScrollPane.setViewportView(orderTable);
        orderScrollPane.setViewportView(orderTable);

        totalLabel.setText("Total:");

        paymentMethodLabel.setText("Payment Method:");

        paymentMethodComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Card" }));

        checkoutButton.setText("Checkout");
        checkoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutButtonActionPerformed(evt);
            }
        });

        itemIdErrorLabel.setForeground(new java.awt.Color(255, 0, 0));
        itemQtyErrorLabel.setForeground(new java.awt.Color(255, 0, 0));

        itemIdLabel.setText("Item ID:");
        itemQtyLabel.setText("Quantity:");

        

        javax.swing.GroupLayout cashierPanelLayout = new javax.swing.GroupLayout(cashierPanel);
cashierPanel.setLayout(cashierPanelLayout);
cashierPanelLayout.setHorizontalGroup(
    cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(cashierPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(orderScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 980, Short.MAX_VALUE)
            .addGroup(cashierPanelLayout.createSequentialGroup()
                .addGroup(cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemIdLabel)
                    .addComponent(itemIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemIdErrorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemQtyLabel)
                    .addComponent(itemQtyField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemQtyErrorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addItemButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cashierPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(totalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cashierPanelLayout.createSequentialGroup()
                .addComponent(paymentMethodLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paymentMethodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkoutButton)))
        .addContainerGap())
);
cashierPanelLayout.setVerticalGroup(
    cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(cashierPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(itemIdLabel)
            .addComponent(itemQtyLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(itemIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(itemQtyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(addItemButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(itemIdErrorLabel)
            .addComponent(itemQtyErrorLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(orderScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(totalLabel)
            .addComponent(totalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(paymentMethodLabel)
            .addComponent(paymentMethodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(checkoutButton))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
);

        parentPanel.add(cashierPanel, "card4");

        stockPanel.setBackground(new java.awt.Color(255, 255, 255));

        addButton.setBackground(new java.awt.Color(19, 62, 135));
        addButton.setFont(new java.awt.Font("Futura Bk BT", 0, 12)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(19, 62, 135));
        updateButton.setFont(new java.awt.Font("Futura Bk BT", 0, 12)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(19, 62, 135));
        deleteButton.setFont(new java.awt.Font("Futura Bk BT", 0, 12)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Futura Hv BT", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(19, 62, 135));
        jLabel3.setText("Stock");

        stockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {"Name", "ID", "Price", "QTY"}
        ));
        stockTable.getTableHeader().setReorderingAllowed(false); // Disable column reordering
        stockTable.setShowGrid(true);
        jScrollPane1.setViewportView(stockTable);

        jLabel1.setText("Item Name");
        jLabel6.setText("ID");
        jLabel7.setText("Price");
        jLabel8.setText("QTY");

        javax.swing.GroupLayout stockPanelLayout = new javax.swing.GroupLayout(stockPanel);
        stockPanel.setLayout(stockPanelLayout);
        stockPanelLayout.setHorizontalGroup(
            stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stockPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(stockPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 979, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stockPanelLayout.createSequentialGroup()
                        .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(stockPanelLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(qtyField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stockPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stockPanelLayout.createSequentialGroup()
                                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6))
                                .addGap(21, 21, 21)
                                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stockPanelLayout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        stockPanelLayout.setVerticalGroup(
            stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(qtyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(updateButton)
                    .addComponent(deleteButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        ));

        parentPanel.add(stockPanel, "card3");

        logPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Futura Hv BT", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(19, 62, 135));
        jLabel5.setText("Log Transaction");

        javax.swing.GroupLayout logPanelLayout = new javax.swing.GroupLayout(logPanel);
        logPanel.setLayout(logPanelLayout);
        logPanelLayout.setHorizontalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                .addGap(894, 894, 894))
        );
        logPanelLayout.setVerticalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 483, Short.MAX_VALUE))
        );

        parentPanel.add(logPanel, "card2");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(96, 139, 193)));

        cashierButton.setBackground(new java.awt.Color(19, 62, 135));
        cashierButton.setFont(new java.awt.Font("Futura Bk BT", 0, 12)); // NOI18N
        cashierButton.setForeground(new java.awt.Color(255, 255, 255));
        cashierButton.setText("Cashier");
        cashierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashierButtonActionPerformed(evt);
            }
        });

        stockButton.setBackground(new java.awt.Color(19, 62, 135));
        stockButton.setFont(new java.awt.Font("Futura Bk BT", 0, 12)); // NOI18N
        stockButton.setForeground(new java.awt.Color(255, 255, 255));
        stockButton.setText("Stock");
        stockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockButtonActionPerformed(evt);
            }
        });

        logButton.setBackground(new java.awt.Color(19, 62, 135));
        logButton.setFont(new java.awt.Font("Futura Bk BT", 0, 12)); // NOI18N
        logButton.setForeground(new java.awt.Color(255, 255, 255));
        logButton.setText("Log");
        logButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logButtonActionPerformed(evt);
            }
        });

        exitButton.setBackground(new java.awt.Color(19, 62, 135));
        exitButton.setFont(new java.awt.Font("Futura Bk BT", 0, 12)); // NOI18N
        exitButton.setForeground(new java.awt.Color(255, 255, 255));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(logButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stockButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cashierButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exitButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(cashierButton)
                .addGap(18, 18, 18)
                .addComponent(stockButton)
                .addGap(18, 18, 18)
                .addComponent(logButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addComponent(exitButton)
                .addGap(27, 27, 27))
        );

        jLabel2.setFont(new java.awt.Font("Futura Hv BT", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(19, 62, 135));
        jLabel2.setText("GARDIONO MART");

        jPanel4.setBackground(new java.awt.Color(19, 62, 135));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(parentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1018, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(parentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logButtonActionPerformed
        parentPanel.removeAll();
        parentPanel.add(logPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }//GEN-LAST:event_logButtonActionPerformed

    private void cashierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashierButtonActionPerformed
        parentPanel.removeAll();
        parentPanel.add(cashierPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }//GEN-LAST:event_cashierButtonActionPerformed

    private void stockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockButtonActionPerformed
        parentPanel.removeAll();
        parentPanel.add(stockPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }//GEN-LAST:event_stockButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
    int confirm = JOptionPane.showConfirmDialog(this, 
        "Are you sure want to logout?", 
        "Logout", 
        JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        
        new login().setVisible(true);
        
        this.dispose();
        }
    }//GEN-LAST:event_exitButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int selectedRow = stockTable.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel stockModel = (DefaultTableModel) stockTable.getModel();
            stockModel.removeRow(selectedRow);

            clearStockFields();
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {
    String name = nameField.getText();
    String id = idField.getText();
    String priceText = priceField.getText();
    String qtyText = qtyField.getText();

    // Validate that all fields are filled
    if (name.isEmpty() || id.isEmpty() || priceText.isEmpty() || qtyText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "All fields must be filled.");
        return;
    }

    // Validate ID
    int idNumber;
    try {
        idNumber = Integer.parseInt(id);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "ID must be a whole number.");
        return;
    }

    // Validate price
    int price;
    try {
        price = Integer.parseInt(priceText);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Price must be a whole number.");
        return;
    }

    // Validate quantity
    int qty;
    try {
        qty = Integer.parseInt(qtyText);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Quantity must be a whole number.");
        return;
    }

    NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
    String formattedPrice = currencyFormat.format(price);

    DefaultTableModel stockModel = (DefaultTableModel) stockTable.getModel();
    stockModel.addRow(new Object[]{name, id, formattedPrice, qty});

    clearStockFields();
}

private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {
    int selectedRow = stockTable.getSelectedRow();
    if (selectedRow != -1) {
        String name = nameField.getText();
        String id = idField.getText();
        String priceText = priceField.getText();
        String qtyText = qtyField.getText();

        // Validate that all fields are filled
        if (name.isEmpty() || id.isEmpty() || priceText.isEmpty() || qtyText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields must be filled.");
            return;
        }

        // Validate ID
        int idNumber;
        try {
            idNumber = Integer.parseInt(id);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID must be a whole number.");
            return;
        }

        // Validate price
        int price;
        try {
            price = Integer.parseInt(priceText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Price must be a whole number.");
            return;
        }

        // Validate quantity
        int qty;
        try {
            qty = Integer.parseInt(qtyText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Quantity must be a whole number.");
            return;
        }

        NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
        String formattedPrice = currencyFormat.format(price);

        DefaultTableModel stockModel = (DefaultTableModel) stockTable.getModel();
        stockModel.setValueAt(name, selectedRow, 0);
        stockModel.setValueAt(id, selectedRow, 1);
        stockModel.setValueAt(formattedPrice, selectedRow, 2);
        stockModel.setValueAt(qty, selectedRow, 3);

        clearStockFields();
    } else {
        JOptionPane.showMessageDialog(this, "Select a row to update.");
    }
}

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idFieldActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void priceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceFieldActionPerformed

    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {
    String itemId = itemIdField.getText();
    String quantityText = itemQtyField.getText();

    // Clear previous error messages
    itemIdErrorLabel.setText("");
    itemQtyErrorLabel.setText("");

    // Validate input fields
    if (itemId.isEmpty()) {
        itemIdErrorLabel.setText("Insert item information");
        return;
    }
    if (quantityText.isEmpty()) {
        itemQtyErrorLabel.setText("Insert item information");
        return;
    }

    int quantity;
    try {
        quantity = Integer.parseInt(quantityText);
    } catch (NumberFormatException e) {
        itemQtyErrorLabel.setText("Invalid quantity");
        return;
    }

    // Find item in stockTable
    DefaultTableModel stockModel = (DefaultTableModel) stockTable.getModel();
    DefaultTableModel orderModel = (DefaultTableModel) orderTable.getModel();
    boolean itemFound = false;

    for (int i = 0; i < stockModel.getRowCount(); i++) {
        if (stockModel.getValueAt(i, 1).equals(itemId)) {
            String itemName = (String) stockModel.getValueAt(i, 0);
            double price = Double.parseDouble(stockModel.getValueAt(i, 2).toString().replaceAll("[^\\d.]", ""));
            int stockQty = Integer.parseInt(stockModel.getValueAt(i, 3).toString());

            if (quantity <= stockQty) {
                // Check if the item already exists in the cart
                boolean itemInCart = false;
                for (int j = 0; j < orderModel.getRowCount(); j++) {
                    if (orderModel.getValueAt(j, 0).equals(itemId)) {
                        int currentQty = (int) orderModel.getValueAt(j, 3);
                        int newQty = currentQty + quantity;
                        if (newQty <= stockQty) {
                            double newTotal = price * newQty;
                            NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
                            orderModel.setValueAt(newQty, j, 3);
                            orderModel.setValueAt(currencyFormat.format(newTotal), j, 4);
                            itemInCart = true;
                        } else {
                            JOptionPane.showMessageDialog(this, "Insufficient stock for item: " + itemName);
                            return;
                        }
                        break;
                    }
                }

                if (!itemInCart) {
                    double total = price * quantity;
                    NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
                    orderModel.addRow(new Object[]{itemId, itemName, currencyFormat.format(price), quantity, currencyFormat.format(total)});
                }

                itemFound = true;
                break;
            } else {
                JOptionPane.showMessageDialog(this, "Insufficient stock for item: " + itemName);
                return;
            }
        }
    }

    if (!itemFound) {
        JOptionPane.showMessageDialog(this, "Item not found in stock.");
    }

    updateTotal();
    checkoutButton.setEnabled(orderTable.getRowCount() > 0); // Enable checkout button if there are items
}

    private void updateTotal() {
        DefaultTableModel orderModel = (DefaultTableModel) orderTable.getModel();
        double total = 0;

        for (int i = 0; i < orderModel.getRowCount(); i++) {
            String totalString = orderModel.getValueAt(i, 4).toString();
            total += Double.parseDouble(totalString.replaceAll("[^\\d.]", ""));
        }

        NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
        totalField.setText(currencyFormat.format(total));
        checkoutButton.setEnabled(orderModel.getRowCount() > 0); // Enable checkout button if there are items
    }

    private void checkoutButtonActionPerformed(java.awt.event.ActionEvent evt) {
    if (orderTable.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "No items in the order.");
        return;
    }

    String paymentMethod = (String) paymentMethodComboBox.getSelectedItem();
    String totalText = totalField.getText();
    double total = Double.parseDouble(totalText.replaceAll("[^\\d.]", ""));

    // Update stock quantities
    DefaultTableModel stockModel = (DefaultTableModel) stockTable.getModel();
    DefaultTableModel orderModel = (DefaultTableModel) orderTable.getModel();

    for (int i = 0; i < orderModel.getRowCount(); i++) {
        String itemId = (String) orderModel.getValueAt(i, 0);
        int quantity = (int) orderModel.getValueAt(i, 3);

        for (int j = 0; j < stockModel.getRowCount(); j++) {
            if (stockModel.getValueAt(j, 1).equals(itemId)) {
                int stockQty = Integer.parseInt(stockModel.getValueAt(j, 3).toString());
                stockModel.setValueAt(String.valueOf(stockQty - quantity), j, 3);
                break;
            }
        }
    }

    // Print receipt
    printReceipt(orderModel, total, paymentMethod);

    // Clear order table
    orderModel.setRowCount(0);
    totalField.setText("");
    checkoutButton.setEnabled(false); // Disable checkout button after clearing the order table
}

    private void printReceipt(DefaultTableModel orderModel, double total, String paymentMethod) {
        StringBuilder receipt = new StringBuilder();
        receipt.append("Receipt\n");
        receipt.append("====================================\n");

        for (int i = 0; i < orderModel.getRowCount(); i++) {
            receipt.append(orderModel.getValueAt(i, 1)).append("\t")
                   .append(orderModel.getValueAt(i, 3)).append("\t")
                   .append(orderModel.getValueAt(i, 4)).append("\n");
        }

        receipt.append("====================================\n");
        receipt.append("Total: ").append(NumberFormat.getCurrencyInstance(new Locale("id", "ID")).format(total)).append("\n");
        receipt.append("Payment Method: ").append(paymentMethod).append("\n");
        receipt.append("Payment Successful\n");

        JOptionPane.showMessageDialog(this, receipt.toString());
    }

    private void clearStockFields() {
        nameField.setText("");
        idField.setText("");
        priceField.setText("");
        qtyField.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainmenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cashierButton;
    private javax.swing.JPanel cashierPanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logButton;
    private javax.swing.JPanel logPanel;
    private javax.swing.JTextField nameField;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JTextField priceField;
    private javax.swing.JTextField qtyField;
    private javax.swing.JButton stockButton;
    private javax.swing.JPanel stockPanel;
    private javax.swing.JTable stockTable;
    private javax.swing.JButton updateButton;
    
    // End of variables declaration//GEN-END:variables
}
